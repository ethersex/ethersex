dep_bool_menu "RFM12 ASK" RFM12_ASK_SUPPORT $ARCH_AVR

  rfm12_count_used

  if [ "$RFM12_ASK_SUPPORT" = "y" -o $RFM12S -gt $RFM12S_USED ]; then

    RFM12_ASK_FS20_SUPPORT=n

    dep_bool "433MHz" RFM12_ASK_433_SUPPORT $RFM12_ASK_SUPPORT
    if [ "$RFM12_ASK_433_SUPPORT" = "y" -o $RFM12S -gt $RFM12S_USED ]; then

      if [ "$RFM12_ASK_433_SUPPORT" = "y" ]; then
       choice "  RFM12 select" "$(rfm12_choice RFM12_ASK_433)"
       rfm12_process_choice RFM12_ASK_433
      fi

      dep_bool "Pollin/Kangtai Powerswitch (IC 2272)" RFM12_ASK_2272_SUPPORT $RFM12_ASK_433_SUPPORT $RFM12_ASK_SUPPORT
      dep_bool "Pollin Powerswitch buried (IC 1527)" RFM12_ASK_1527_SUPPORT $RFM12_ASK_433_SUPPORT $RFM12_ASK_SUPPORT
      dep_bool "Tevion Powerswitch" RFM12_ASK_TEVION_SUPPORT $RFM12_ASK_433_SUPPORT $RFM12_ASK_SUPPORT
      dep_bool "Intertechno ITS-150" RFM12_ASK_INTERTECHNO_SUPPORT $RFM12_ASK_433_SUPPORT $RFM12_ASK_SUPPORT
      dep_bool "Intertechno Self Learning" RFM12_ASK_INTERTECHNO_SL_SUPPORT $RFM12_ASK_433_SUPPORT $RFM12_ASK_SUPPORT
      dep_bool "Oase FM Master" RFM12_ASK_OASEFMMASTER_SUPPORT $RFM12_ASK_433_SUPPORT $RFM12_ASK_SUPPORT

      dep_bool "External filter" RFM12_ASK_EXTERNAL_FILTER_SUPPORT $RFM12_ASK_433_SUPPORT $RFM12_ASK_SUPPORT
      dep_bool "Sensing" RFM12_ASK_SENSING_SUPPORT $RFM12_ASK_433_SUPPORT $RFM12_ASK_EXTERNAL_FILTER_SUPPORT
    else
      comment "433MHz not available. No Free RFM12. ($RFM12S_USED/$RFM12S)"
    fi

    comment ""
    dep_bool "868MHz" RFM12_ASK_868_SUPPORT $RFM12_ASK_SUPPORT
    if [ "$RFM12_ASK_868_SUPPORT" = "y" -o $RFM12S -gt $RFM12S_USED ]; then

      if [ "$RFM12_ASK_868_SUPPORT" = "y" ]; then
        choice "  RFM12 select" "$(rfm12_choice RFM12_ASK_868)"
        rfm12_process_choice RFM12_ASK_868
      fi

      dep_bool "FS20 Send" RFM12_ASK_FS20_TX_SUPPORT $RFM12_ASK_868_SUPPORT $RFM12_ASK_SUPPORT
      dep_bool "FS20 Receive" RFM12_ASK_FS20_RX_SUPPORT $RFM12_ASK_868_SUPPORT $RFM12_ASK_SUPPORT
      if [ "$RFM12_ASK_FS20_TX_SUPPORT" = "y" -o "$RFM12_ASK_FS20_RX_SUPPORT" = "y" ]; then
        RFM12_ASK_FS20_SUPPORT=y
      fi
      dep_bool "FHT" RFM12_ASK_FHT_SUPPORT $RFM12_ASK_FS20_SUPPORT $RFM12_ASK_868_SUPPORT $RFM12_ASK_SUPPORT
      dep_bool "ESA" RFM12_ASK_ESA_SUPPORT $RFM12_ASK_FS20_RX_SUPPORT $RFM12_ASK_868_SUPPORT $RFM12_ASK_SUPPORT
      dep_bool "TX3" RFM12_ASK_TX3_SUPPORT $RFM12_ASK_FS20_RX_SUPPORT $RFM12_ASK_868_SUPPORT $RFM12_ASK_SUPPORT
      dep_bool "Send received data via syslog" RFM12_ASK_FS20_SYSLOG $RFM12_ASK_FS20_RX_SUPPORT $RFM12_ASK_868_SUPPORT $RFM12_ASK_SUPPORT $SYSLOG_SUPPORT

    else
      comment "868MHz not available. No Free RFM12. ($RFM12S_USED/$RFM12S)"
    fi

    define_bool RFM12_ASK_FS20_SUPPORT "$RFM12_ASK_FS20_SUPPORT"

    comment  "Debugging Flags"
    dep_bool 'Sensing' DEBUG_ASK_SENSE $DEBUG $RFM12_ASK_SENSING_SUPPORT
    dep_bool 'FS20' DEBUG_ASK_FS20 $DEBUG $RFM12_ASK_FS20_RX_SUPPORT $RFM12_ASK_868_SUPPORT

  else
    comment "RFM12 ASK Support not available. No Free RFM12. ($RFM12S_USED/$RFM12S)"
  fi

endmenu 
