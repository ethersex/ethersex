#!/bin/bash

. scripts/osdefaults.sh

FILE="$1"		# compiled avr binary

query_avrsize()		# get vars via 'eval'
{
	local file="$1"
	local line

	# defaults, if section does not exist
	echo "avrsize_text=0"
	echo "avrsize_data=0"
	echo "avrsize_bss=0"

	# typical output of: avr-size -A 'ethersex'
	#
	# ethersex  :
	# section      size      addr
	# .data          44   8388864
	# .text       28224         0
	# .bss         2189   8388908
	# .stab       97728         0
	# .stabstr    51966         0
	# .comment       34         0
	# Total      180185

	avr-size -A "$file" | while read line; do {
		set -- $line
		case "$1" in
			'.text')
				echo "avrsize_text='$2'"
			;;
			'.data')
				echo "avrsize_data='$2'"
			;;
			'.bss')
				echo "avrsize_bss='$2'"
			;;
		esac
	} done
}

eval $(query_avrsize "$FILE")
val[0]="$avrsize_text"
val[1]="$avrsize_data"
val[2]="$avrsize_bss"

maxper=30
IMAGESIZE=$(ls -l $1.bin | ${AWK} '{ print $5 }')
if [ "$3" != "y" ]; then
  FLASHSIZE=$(echo $(( `echo -e "#include <avr/io.h>\nFLASHEND" | avr-cpp -mmcu=$2 | ${SED} '$!d'` + 1 )))
else
  FLASHSIZE=$4
fi
PERCENT=$(${AWK} "BEGIN {printf(\"%.2f\", $IMAGESIZE.0 / $FLASHSIZE.0 * 100.0);}")
PER=$(${AWK} "BEGIN {printf(\"%i\", $IMAGESIZE / $FLASHSIZE * $maxper);}")

echo "Imagesize: $IMAGESIZE/$FLASHSIZE bytes (${PERCENT}%)"
if [ $IMAGESIZE -gt $FLASHSIZE ];then
  echo "  WARNING! Your Image is too big for the selected chip. WARNING!"
  echo ""
  exit 1
else
	echo -n "  ["
	COUNTER=0
	while [  $COUNTER -lt $maxper ]; do
		if [ $COUNTER -lt $PER ]; then
			echo -n "="
		else
			echo -n "-"
		fi
		let COUNTER=COUNTER+1
	done
	echo "]"
fi
echo ""
echo -e "Program (.text + .data)\t: $(${AWK} "BEGIN {print ${val[0]}+${val[1]};}") bytes"
echo -e "Data (.data + .bss)\t:  $(${AWK} "BEGIN {print ${val[2]}+${val[1]};}") bytes"
echo ""
