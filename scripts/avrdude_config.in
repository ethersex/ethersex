###
comment 'Programmer -------------------'

AVRDUDE_PROGRAMMER_DEFAULT="${AVRDUDE_PROGRAMMER:=avrispmkII}"

choice 'Programmer Type (-c type)' \
	"${AVRDUDE_PROGRAMMER_TYPES}" \
	"$AVRDUDE_PROGRAMMER_DEFAULT" CONFIG_AVRDUDE_PROGRAMMER

CONFIG_AVRDUDE_PROGRAMMER="${CONFIG_AVRDUDE_PROGRAMMER:=${AVRDUDE_PROGRAMMER_DEFAULT}}"	

define_symbol AVRDUDE_PROGRAMMER $(echo "$CONFIG_AVRDUDE_PROGRAMMER" | awk '{ num=sub(/^_/, "", $0); if (num > 0) { gsub(/_/, "-", $0) }; print $0 }')

string 'Port (-P port, "usb", "/dev/ttyS0", ...)' CONFIG_AVRDUDE_PORT 'usb'
define_symbol AVRDUDE_PORT $CONFIG_AVRDUDE_PORT

###
comment 'Options ----------------------'

bool 'Extra verbose output (-v -v)' CONFIG_AVRDUDE_VERBOSE
if [ "$CONFIG_AVRDUDE_VERBOSE" = "y" ]; then
	define_string AVRDUDE_VERBOSE "-v -v"
else
	define_symbol AVRDUDE_VERBOSE "-v"
fi

bool 'Do NOT verify after programming (-V)' CONFIG_AVRDUDE_NO_VERIFY
if [ "$CONFIG_AVRDUDE_NO_VERIFY" = "y" ]; then
	define_symbol AVRDUDE_NO_VERIFY "-V"
fi

bool 'Count # of erase cycles in EEPROM (-y)' CONFIG_AVRDUDE_ERASE_COUNTER
if [ "$CONFIG_AVRDUDE_ERASE_COUNTER" = "y" ]; then
	define_symbol AVRDUDE_ERASE_COUNTER "-y"
fi

BITCLOCK_CHOICES="4 AVRDUDE_BITCLOCK_4"
AVRDUDE_BITCLOCK_DEFAULT="4"
if [ $FREQ -ge 4000000 ]; then
	BITCLOCK_CHOICES+=" 1 AVRDUDE_BITCLOCK_1"
	AVRDUDE_BITCLOCK_DEFAULT="1"
fi
if [ $FREQ -ge 10000000 ]; then
	BITCLOCK_CHOICES+=" 0.5 AVRDUDE_BITCLOCK_05"
fi
if [ $FREQ -ge 16000000 ]; then
	BITCLOCK_CHOICES+=" 0.3 AVRDUDE_BITCLOCK_03"
fi
choice 'Bitclock for ISP or JTAG (-B usec)' \
	"${BITCLOCK_CHOICES}" \
	"$AVRDUDE_BITCLOCK_DEFAULT" CONFIG_AVRDUDE_BITCLOCK

case $CONFIG_AVRDUDE_BITCLOCK in
	AVRDUDE_BITCLOCK_1)
		define_string AVRDUDE_BITCLOCK "-B 1"
	;;
	AVRDUDE_BITCLOCK_05)
		define_string AVRDUDE_BITCLOCK "-B 0.5"
	;;
	AVRDUDE_BITCLOCK_03)
		define_string AVRDUDE_BITCLOCK "-B 0.3"
	;;
	*)
		define_string AVRDUDE_BITCLOCK "-B 4"
	;;
esac

###
comment 'Extra Options ----------------'
string 'Pass extra options to avrdude' CONFIG_AVRDUDE_EXTRA_OPTIONS
if [ -n "$CONFIG_AVRDUDE_EXTRA_OPTIONS" ]; then
	define_string AVRDUDE_EXTRA_OPTIONS "$CONFIG_AVRDUDE_EXTRA_OPTIONS"
fi

###
comment 'Fuses ------------------------'
# TODO add missing fuse default values for e6
case "$MCU" in
	at90can128)
		DEFAULT_AVRDUDE_LFUSE=FF
		DEFAULT_AVRDUDE_HFUSE=DF
		DEFAULT_AVRDUDE_EFUSE=FD
	;;
	atmega2561)
		DEFAULT_AVRDUDE_LFUSE=e6
		DEFAULT_AVRDUDE_HFUSE=d1
		DEFAULT_AVRDUDE_EFUSE=fd
	;;
	atmega644*)
		DEFAULT_AVRDUDE_LFUSE=e6
		DEFAULT_AVRDUDE_HFUSE=d1
		DEFAULT_AVRDUDE_EFUSE=fd
	;;
	atmega1284p)
		DEFAULT_AVRDUDE_LFUSE=e6
		DEFAULT_AVRDUDE_HFUSE=d1
		DEFAULT_AVRDUDE_EFUSE=fd
	;;
	*)
		DEFAULT_AVRDUDE_LFUSE=""
		DEFAULT_AVRDUDE_HFUSE=""
		DEFAULT_AVRDUDE_EFUSE=""
	;;
esac	

hex 'Fuse Low Byte (FLB)' CONFIG_AVRDUDE_LFUSE $DEFAULT_AVRDUDE_LFUSE
# exactly two digits, please
if expr "$CONFIG_AVRDUDE_LFUSE" : '^[0-9a-fA-F][0-9a-fA-F]$' >/dev/null
then
        define_symbol AVRDUDE_LFUSE 0x${CONFIG_AVRDUDE_LFUSE}
else
        define_symbol AVRDUDE_LFUSE INVALID_VALUE
        echo -e "\007*** Invalid value for Fuse Low Byte"
fi

hex 'Fuse High Byte (FHB)' CONFIG_AVRDUDE_HFUSE $DEFAULT_AVRDUDE_HFUSE
if expr "$CONFIG_AVRDUDE_HFUSE" : '^[0-9a-fA-F][0-9a-fA-F]$' >/dev/null
then
        define_symbol AVRDUDE_HFUSE 0x${CONFIG_AVRDUDE_HFUSE}
else
        define_symbol AVRDUDE_HFUSE INVALID_VALUE
        echo -e "\007*** Invalid value for Fuse High Byte"
fi

hex 'Extended Fuse Byte (EFB)' CONFIG_AVRDUDE_EFUSE $DEFAULT_AVRDUDE_EFUSE
if expr "$CONFIG_AVRDUDE_EFUSE" : '^[0-9a-fA-F][0-9a-fA-F]$' >/dev/null
then
        define_symbol AVRDUDE_EFUSE 0x${CONFIG_AVRDUDE_EFUSE}
else
        define_symbol AVRDUDE_EFUSE INVALID_VALUE
        echo -e "\007*** Invalid value for Extended Fuse Byte"
fi

