#! /bin/sh

usage() {
  echo "Usage:"
  echo "  add-hardware NAME"
  echo ""
  echo "Generate new hardware template at pinning/hardware/user_NAME"
  echo "and start a sensible editor afterwards."
  exit $1
}

if test "x$1" = "x-h"; then usage 0; fi
if test "x$1" = "x--help"; then usage 0; fi

hw_input=`echo $1 | sed -e 's/[^A-Za-z0-9_]//g'`;
if test -z "$hw_input"; then usage 1; fi
hw=user_$hw_input; shift;

while test "x`pwd`" != "x/"; do
  [ -e pinning ] && break
  cd ..
done

[ -e .config ] || {
  echo "No .config file found, launching menuconfig..."
  sleep 2s
  make menuconfig
}

[ -e .config ] || {
  echo "Still no .config file, STOP."
  exit 1
}

. ./.config

[ -e "pinning/hardware/$hw.m4" ] && {
  echo "pinning/hardware/$hw.m4: File already exists."
  exit 0
}

(

cat <<FNORD
dnl
dnl $hw.m4
dnl
dnl Pin Configuration for '$hw'.  Edit it to fit your needs.
dnl
FNORD

template() { if test "x$1" = "xy"; then echo ""; sed -e 's/^\s*//'; fi; }

template $MODBUS_SUPPORT << FNORD
  /* modbus tx  */
  pin(MODBUS_TX, PC2)
FNORD

template $DMX_SUPPORT << FNORD
  /* port config for dmx */
  pin(DMX_RS485EN, PC2, OUTPUT)
  pin(DMX_RS485TX, PD1, OUTPUT)
FNORD

template $BULBDIAL_SUPPORT << FNORD
  /* port config for bulbdial clock */
  pin(BULBDIAL_HOURS,   PD7, OUTPUT)
  pin(BULBDIAL_MINUTES, PB3, OUTPUT)
  pin(BULBDIAL_ONE,     PA7, OUTPUT)
  pin(BULBDIAL_TWO,     PA3, OUTPUT)
  pin(BULBDIAL_THREE,   PC2, OUTPUT)
  pin(BULBDIAL_FOUR,    PA4, OUTPUT)
  pin(BULBDIAL_FIVE,    PC5, OUTPUT)
  pin(BULBDIAL_SIX,     PA5, OUTPUT)
  pin(BULBDIAL_SEVEN,   PC4, OUTPUT)
  pin(BULBDIAL_EIGHT,   PA6, OUTPUT)
  pin(BULBDIAL_NINE,    PC3, OUTPUT)
  pin(BULBDIAL_TEN,     PA0, OUTPUT)
  pin(BULBDIAL_ELEVEN,  PA1, OUTPUT)
  pin(BULBDIAL_TWELVE,  PA2, OUTPUT)
FNORD

template $PWM_SERVO_SUPPORT << FNORD
  /* port config for servos*/
  pin(SERVO0, PD7, OUTPUT)
  pin(SERVO1, PD6, OUTPUT)
  pin(SERVO2, PD5, OUTPUT)
  pin(SERVO3, PD4, OUTPUT)
  pin(SERVO4, PD3, OUTPUT)
  pin(SERVO5, PD2, OUTPUT)
  pin(SERVO6, PD1, OUTPUT)
  pin(SERVO7, PD0, OUTPUT)
FNORD

template $BUTTONS_INPUT_SUPPORT << FNORD
ifdef(`conf_BUTTONS_INPUT', `
  /* input buttons */
  pin(BTN_UP, PC2, INPUT)
  pin(BTN_RIGHT, PC3, INPUT)
  pin(BTN_DOWN, PC4, INPUT)
  pin(BTN_LEFT, PC5, INPUT)
  pin(BTN_FIRE, PD2, INPUT)
  pin(BTN_FIRE2, PD3, INPUT)

  #define BUTTONS_COUNT 6

  #define BUTTONS_CONFIG(_x) \
  _x(BTN_UP)\
  _x(BTN_DOWN)\
  _x(BTN_LEFT)\
  _x(BTN_RIGHT)\
  _x(BTN_FIRE)\
  _x(BTN_FIRE2)
')
FNORD

template $PS2_SUPPORT << FNORD
  /* ps/2 Pins */
  pin(PS2_DATA, PA7)
  pin(PS2_CLOCK, PA6)
FNORD

template $HC595_SUPPORT << FNORD
  /* Pins for the hc595 shift register */
  pin(HC595_DATA, PB6)
  pin(HC595_CLOCK, PB2)
  pin(HC595_STORE, PB7)
FNORD

template $HC165_SUPPORT << FNORD
  /* Pins for the hc165 shift register */
  pin(HC165_DATA, PB0)
  pin(HC165_CLOCK, PB2)
  pin(HC165_LOAD, PB1)
FNORD

template $ONEWIRE_SUPPORT << FNORD
  /* onewire port range */
   ONEWIRE_PORT_RANGE(PC0, PC0)
FNORD

template $RC5_SUPPORT << FNORD
  /* rc5 support */
  pin(RC5_SEND, PD4)
  RC5_USE_INT(0)
FNORD

template $TLC5620_SUPPORT << FNORD
  pin(TLC5620_DATA, PD5, OUTPUT)
  pin(TLC5620_CLOCK, PD4, OUTPUT)
  pin(TLC5620_LOAD, PD7, OUTPUT)
FNORD

template $FS20_SUPPORT << FNORD
  /* fs20 support */
  pin(FS20_SEND, PB2)
  /* DO NOT CHANGE PIN!  USES INTERNAL COMPARATOR! */
  pin(FS20_RECV, PB3)
FNORD

template $USB_SUPPORT << FNORD
  dnl This must also be D+ of the USB signal
  USB_USE_INT(1)
  dnl This pin must have the 1k5 Pullup and must be on the same port as the Interupt pin
  pin(USB_DMINUS, PD5)
  pin(USB_DPLUS, PD3)
FNORD

template $STELLA_SUPPORT << FNORD
  STELLA_USE_TIMER(2)
  STELLA_PORT1_RANGE(PC0, PC7)
FNORD

template $MOTORCURTAIN_SUPPORT << FNORD
  MOTORCURTAIN_PORT_RANGE(PD2, PD6)
  pin(MOCU_MOTOR_ENABLE, PA7, OUTPUT)
  pin(MOCU_MOTOR_DIRECTION, PA6, OUTPUT)
  pin(MOCU_SAFETYSWITCH, PD7, INPUT)
FNORD

template $ST7626_SUPPORT << FNORD
  ST7626_DATA_PORT(A)
  pin(ST7626_CS, PC3, OUTPUT)
  pin(ST7626_RD, PC4, OUTPUT)
  pin(ST7626_WR, PC1, OUTPUT)
  pin(ST7626_A0, PC0, OUTPUT)
  pin(ST7626_RESET, PC2, OUTPUT)
FNORD

template $ENC28J60_SUPPORT << FNORD
  /* port the enc28j60 is attached to */
  pin(SPI_CS_NET, SPI_CS_HARDWARE)
FNORD

template $DATAFLASH_SUPPORT << FNORD
  /* port the dataflash CS is attached to */
  pin(SPI_CS_DF, PB1, OUTPUT)
FNORD

template $SD_READER_SUPPORT << FNORD
  /* port the sd-reader CS is attached to */
  pin(SPI_CS_SD_READER, PB2, OUTPUT)
FNORD

template $SOFT_UART_SUPPORT << FNORD
  /* port software uart tx output */
  pin(SOFT_UART_TX, PD7, OUTPUT)
FNORD

template $DCF1_SUPPORT << FNORD
  /* port config for DCF77 (these are alternatives, use one of them) */
  DCF77_USE_PCINT(0, PA0)
  dnl DCF77_USE_INT(1, PD3)
FNORD

template $DCF1_USE_PON_SUPPORT << FNORD
  /* port config for DCF1 PowerOn Pin */
  pin(DCF1_PON, PA1, OUTPUT)
FNORD

template $HD44780_SUPPORT << FNORD
    pin(HD44780_RS, PA0)
    pin(HD44780_EN1, PA2)
    pin(HD44780_D4, PA3)
    pin(HD44780_D5, PA4)
    pin(HD44780_D6, PA5)
    pin(HD44780_D7, PA6)
FNORD

template $HD44780_READBACK << FNORD
    pin(HD44780_RW, PA1)
FNORD

template $HD44780_MULTIENSUPPORT << FNORD
    pin(HD44780_EN2, PA7)
FNORD

template $HD44780_BACKLIGHT_SUPPORT << FNORD
    pin(HD44780_BL, PB1, OUTPUT)
FNORD

template $S1D13305_SUPPORT << FNORD
    /* port config for s1d13305 lcd */
    S1D13305_DATA_PORT(A)
    pin(S1D13305_CS, PC6, OUTPUT)
    pin(S1D13305_RES, PD4, OUTPUT)
    pin(S1D13305_A0, PD5, OUTPUT)
    pin(S1D13305_RD, PD6, OUTPUT)
    pin(S1D13305_WR, PD7, OUTPUT)
    /* uncomment if you have enabled LCD backlight support */
    //pin(LCD_BACKLIGHT, PC7, OUTPUT)
FNORD

template $CW_SUPPORT << FNORD
  /* morse support */
  pin(CW, PC6, OUTPUT)
FNORD

template $CH_A_PWM_GENERAL_SUPPORT << FNORD
  /* PWM Channel A support */
  pin(CHANNEL_A_PWM, PD5, OUTPUT)
FNORD

template $CH_B_PWM_GENERAL_SUPPORT << FNORD
  /* PWM Channel B support */
  pin(CHANNEL_B_PWM, PD4, OUTPUT)
FNORD

template $CH_C_PWM_GENERAL_SUPPORT << FNORD
  /* PWM Channel C support */
  pin(CHANNEL_C_PWM, PB7, OUTPUT)
FNORD

template $PWM_WAV_SUPPORT << FNORD
  /* PWM WAV SUPPORT */
  pin(SOUND, PD7, OUTPUT)
FNORD

template $SRF05_SUPPORT << FNORD
  /* ultrasonic SRF05 support */
  pin(SRF05, PA7)
FNORD

template $AUTOSET_USB_ENABLE_PIN_SUPPORT << FNORD
  /* USB enable Pin support */
  pin(USB_ENABLE, PC6, OUTPUT)
FNORD

template $IRMP_SUPPORT << FNORD
  pin(IRMP_RX, PD2)
  #define IRMP_USE_TIMER0
  #define IRMP_RX_LOW_ACTIVE
  #undef IRMP_RX_LED_LOW_ACTIVE
  pin(IRMP_TX, PD7) dnl OC2
FNORD

template $SER_RAM_23K256_SUPPORT << FNORD
  /* 23K256 SRAM  Chip select */
  pin(SPI_CS_23K256, PB1, OUTPUT)
FNORD

template $PCA9685_OUTPUT_ENABLE << FNORD
  /* PCA9685 Output Enable Pin */
  pin(PCA9685_OE, PA0)
FNORD

template $TANKLEVEL_SUPPORT << FNORD
  /* tank levelmeter pump output */
  pin(TANKLEVEL_PUMP, PC3, OUTPUT)
FNORD
template $TANKLEVEL_LOCK_SUPPORT << FNORD
  /* tank levelmeter lock input */
  pin(TANKLEVEL_LOCK, PA2, INPUT)
FNORD

### HARDWARE SPECIFIC TEMPLATES #############################################

HWCLASS=`echo $MCU | sed  's/.*\(.\)/\1/'`

if [ $HWCLASS = 8 ]; then  # ATmega8, 88, 168 and others ...
  template $ECMD_SERIAL_USART_RS485_SUPPORT << FNORD
    pin(ECMD_SERIAL_USART_TX, PD2)
FNORD

  template $STATUSLED_POWER_SUPPORT << FNORD
    pin(STATUSLED_POWER, PC6, OUTPUT)
FNORD
  template $STATUSLED_BOOTED_SUPPORT << FNORD
    pin(STATUSLED_BOOTED, PC6, OUTPUT)
FNORD
  template $STATUSLED_NETLINK_SUPPORT << FNORD
    pin(STATUSLED_NETLINK, PC6, OUTPUT)
FNORD
  template $STATUSLED_TX_SUPPORT << FNORD
    pin(STATUSLED_TX, PD6, OUTPUT)
FNORD
  template $STATUSLED_RX_SUPPORT << FNORD
    pin(STATUSLED_RX, PD7, OUTPUT)
FNORD
  template $STATUSLED_HB_ACT_SUPPORT << FNORD
    pin(STATUSLED_HB_ACT, PD7, OUTPUT)
FNORD

  template $ZBUS_SUPPORT << FNORD
    /* port config for zbus */
    pin(ZBUS_RXTX_PIN, PD2)
FNORD

  template $RFM12_SUPPORT << FNORD
    /* port the rfm12 module CS is attached to */
    pin(SPI_CS_RFM12_0, SPI_CS_HARDWARE)

    RFM12_USE_INT(0)
FNORD

  template $BLP_SUPPORT << FNORD
    /* port config for BlinkenlightsPro */
    pin(BLP_CLK, PB0, OUTPUT)
    pin(BLP_STR, PD5, OUTPUT)
    pin(BLP_DA_A, PB1, OUTPUT)
    pin(BLP_DA_B, PB2, OUTPUT)
    pin(BLP_DA_C, PD4, OUTPUT)
    pin(BLP_DA_D, PD3, OUTPUT)
    pin(BLP_DA_E, PB3, OUTPUT)
    pin(BLP_DA_F, PB4, OUTPUT)
    pin(BLP_DA_G, PB5, OUTPUT)
    pin(BLP_DA_H, PC2, OUTPUT)
    pin(BLP_DA_I, PC3, OUTPUT)
FNORD

  template $LEDRG_SUPPORT << FNORD
    /* port config for LED-Module16x16rg  */
    pin(LED_RESET, PB4, OUTPUT)
    pin(LED_SELECT, PB5, OUTPUT)
    pin(LED_BRIGHT, PB3, OUTPUT)
    pin(LED_RED, PB0, OUTPUT)
    pin(LED_GREEN, PB1, OUTPUT)
    pin(LED_CLOCK, PB2, OUTPUT)
FNORD

  template $S1D15G10_SUPPORT << FNORD
    /* port config for s1d15g10 lcd */
    pin(S1D15G10_CS, PD7, OUTPUT)
    pin(S1D15G10_RESET, PB0, OUTPUT)
FNORD

##############################################################################
#                                                                            #
# ATmega162, 32, 644 etc.                                                    #
#                                                                            #
##############################################################################
else
  template $ECMD_SERIAL_USART_RS485_SUPPORT << FNORD
    pin(ECMD_SERIAL_USART_TX, PC2)
FNORD

  template $STATUSLED_POWER_SUPPORT << FNORD
    pin(STATUSLED_POWER, PA0, OUTPUT)
FNORD
  template $STATUSLED_BOOTED_SUPPORT << FNORD
    pin(STATUSLED_BOOTED, PA1, OUTPUT)
FNORD
  template $STATUSLED_NETLINK_SUPPORT << FNORD
    pin(STATUSLED_NETLINK, PA2, OUTPUT)
FNORD
  template $STATUSLED_TX_SUPPORT << FNORD
    pin(STATUSLED_TX, PA3, OUTPUT)
FNORD
  template $STATUSLED_RX_SUPPORT << FNORD
    pin(STATUSLED_RX, PA4, OUTPUT)
FNORD
  template $STATUSLED_HB_ACT_SUPPORT << FNORD
    pin(STATUSLED_HB_ACT, PA4, OUTPUT)
FNORD

  template $ZBUS_SUPPORT << FNORD
    /* port config for zbus */
    pin(ZBUS_RXTX_PIN, PC2)
FNORD

  template $EMS_SUPPORT << FNORD
    /* port config for EMS - pin must match USART1 TX line */
    pin(EMS_UART_TX, PD3)
FNORD

  template $RFM12_SUPPORT << FNORD
    /* port the rfm12 module CS is attached to */
    pin(SPI_CS_RFM12, PB0, OUTPUT)
    RFM12_USE_INT(2)
FNORD

  template $BLP_SUPPORT << FNORD
    /* port config for BlinkenlightsPro */
    pin(BLP_CLK, PB1, OUTPUT)
    pin(BLP_STR, PB2, OUTPUT)
    pin(BLP_DA_A, PA0, OUTPUT)
    pin(BLP_DA_B, PA1, OUTPUT)
    pin(BLP_DA_C, PA2, OUTPUT)
    pin(BLP_DA_D, PA3, OUTPUT)
    pin(BLP_DA_E, PA4, OUTPUT)
    pin(BLP_DA_F, PA5, OUTPUT)
    pin(BLP_DA_G, PA6, OUTPUT)
    pin(BLP_DA_H, PA7, OUTPUT)
    pin(BLP_DA_I, PB0, OUTPUT)
FNORD

  template $LEDRG_SUPPORT << FNORD
    /* port config for LED-Module16x16rg  */
    pin(LED_RESET, PA4, OUTPUT)
    pin(LED_SELECT, PA5, OUTPUT)
    pin(LED_BRIGHT, PA3, OUTPUT)
    pin(LED_RED, PA0, OUTPUT)
    pin(LED_GREEN, PA1, OUTPUT)
    pin(LED_CLOCK, PA2, OUTPUT)
FNORD

  template $S1D15G10_SUPPORT << FNORD
    /* port config for s1d15g10 lcd */
    pin(S1D15G10_CS, PA7, OUTPUT)
    pin(S1D15G10_RESET, PA4, OUTPUT)
FNORD

  template $PSB2186_SUPPORT << FNORD
    /* port config for ISDN PSB2186_SUPPORT */
    /* Attention ! PORTA complete for PSB2186_SUPPORT */
    pin(PSB2186_RD, PD7, OUTPUT)
    pin(PSB2186_WR, PD6, OUTPUT)
    pin(PSB2186_CS, PD5, OUTPUT)
    pin(PSB2186_ALE, PD4, OUTPUT)
FNORD

fi

) > "pinning/hardware/$hw.m4"

grep -v -e "^HARDWARE=" -e "^$HARDWARE=y" .config > .config.new
echo "HARDWARE=$hw" >> .config.new
echo "$hw=y" >> .config.new
mv -f .config.new .config

l_editor() {
  echo "launching editor for $1 ..."
  if [ -n "$EDITOR" ]; then
    $EDITOR $1
  elif [ -n "`which nano`" ]; then
    nano $1
  fi
}

l_editor "pinning/hardware/$hw.m4"

if [ -x .git ]; then
  echo ""
  echo "You seem to be using Git to manage your Ethersex sources."
  echo "Consider doing 'git add pinning/hardware/$hw.m4'."
  echo ""
fi
